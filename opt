from scipy.optimize import linprog
#linprog решает только задачи минимизации

obj = [-54.8, -51.4, -43.65,-48.8, -37.663, -37.662, -26.686, -49.051, 13.5]
from scipy.optimize import linprog
#linprog решает только задачи минимизации

obj = [-54.8, -51.4, -43.65,-48.8, -37.663, -37.662, -26.686, -49.051, 13.5]

#Левая сторона ограничений
lhs_ineq = [[ -1, 0, 0, 0, 0, 0, 0, 0, 0],  #-x1: ежемесячный объем производства (тонн)
            [0, -1, 0, 0, 0, 0, 0, 0, 0],  #-x2: ежемесячный объем производства (тонн)
            [ 0, 0, -1, 0, 0, 0, 0, 0, 0],  #-x3: ежемесячный объем производства (тонн)
            [ 0, 0, 0, -1, 0, 0, 0, 0, 0],  #-x4: ежемесячный объем производства (тонн)
            [0, 0, 0, 0, -1, 0, 0, 0, 0],  #-x5: ежемесячный объем производства (тонн)
            [ 0, 0, 0, 0, 0, -1, 0, 0, 0],  #-x6: ежемесячный объем производства (тонн)
            [ 0, 0, 0, 0, 0, 0, -1, 0, 0]  #-x7: ежемесячный объем производства (тонн)
            ]

#Правая сторона ограничений ежемесячного объема производства (тонн)
rhs_ineq = [-80000, #ежемесячный объем производства (тонн) бензина 10G
            -72000, #ежемесячный объем производства (тонн) бензина 98A
            -78000, #ежемесячный объем производства (тонн) бензина 92M
            -73000, #ежемесячный объем производства (тонн) бензина  95M
            -79000, #ежемесячный объем производства (тонн) бензина 91A
            -67000, #ежемесячный объем производства (тонн) бензина 91B
            -40000 #ежемесячный объем производства (тонн) бензина BPR
           ]

#Определение границ каждой переменной
bnd = [(0, 80000), #x1
       (0, 72000), #x2
       (0, 78000), #x3
       (0, 73000), #x4
       (0, 79000), #x5
       (0,67000), #x6
       (0, 40000), #x7
       (0, 1000000), #x8
       (0, 1000000)  #x9
       ]

#obj содержит коэффициенты целевой функции
#lhs_ineq и rhs_ineq содержат коэффициенты из ограничений-неравенств для x.

opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq, bounds=bnd, method="simplex")
print(opt)
lhs_ineq = [[ -1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, -1, 0, 0, 0, 0, 0, 0, 0],
            [ 0, 0, -1, 0, 0, 0, 0, 0, 0],
            [ 0, 0, 0, -1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, -1, 0, 0, 0, 0],
            [ 0, 0, 0, 0, 0, -1, 0, 0, 0],
            [ 0, 0, 0, 0, 0, 0, -1, 0, 0]]

rhs_ineq = [-80000,
            -72000,
            -78000,
            -73000,
            -79000,
            -67000,
            -40000]

bnd = [(0, 80000),
       (0, 72000),
       (0, 78000),
       (0, 73000),
       (0, 79000),
       (0,67000),
       (0, 40000),
       (0, 1000000),
       (0, 1000000)]

#obj содержит коэффициенты целевой функции
#lhs_ineq и rhs_ineq содержат коэффициенты из ограничений-неравенств для x.

opt = linprog(c=obj, A_ub=lhs_ineq, b_ub=rhs_ineq, bounds=bnd, method="simplex")
print(opt)



######Загрузка исходных даных######

from openpyxl import load_workbook

wb = load_workbook('C:\XXXX\ИТМО\НИР\Задача№3_Мат_описание\lineranalysis\InputData.xlsx', data_only=True)  # Грузим эксель, первый аргумент - название файла эксель

data_for_calculating = []  # Создаем массив для данных
if 'ObjFunction' in wb.sheetnames:  # Проверяем есть ли данный лист в экселе
    ws = wb['ObjFunction']  # Присваиваем переменной ws нужный лист
    for cell in ws[2]:  # Пробегаемся по каждой ячейке во второй строке
        if cell.value == 0:
            break
        # Грузим в массив данные по каждой ячейке
        data_for_calculating.append(cell.value)
else:
    print('List Numbers does not exists')

if 'Restrictions' in wb.sheetnames:  # Проверяем есть ли данный лист в экселе
    ws = wb['Restrictions']  # Присваиваем переменной ws нужный лист
    for cell in ws[2]:  # Пробегаемся по каждой ячейке во второй строке
        if cell.value == 0:
            break
        # Грузим в массив данные по каждой ячейке
        data_for_calculating.append(cell.value)
else:
    print('List Numbers does not exists')
